{"pageProps":{"post":{"title":"新規投稿用のファイルを作成するやつ","date":"2022-06-05T03:04:17+09:00","slug":"create_new_post","content":"<h2 id=\"%E6%96%B0%E8%A6%8F%E6%8A%95%E7%A8%BF%E3%82%92%E4%BD%9C%E3%82%8B%E5%A0%B4%E5%90%88\"><a class=\"header-anchor-link\" href=\"#%E6%96%B0%E8%A6%8F%E6%8A%95%E7%A8%BF%E3%82%92%E4%BD%9C%E3%82%8B%E5%A0%B4%E5%90%88\" aria-hidden=\"true\"></a> 新規投稿を作る場合</h2>\n<p>.md のファイルを作成するぐらいなんてことはないんだけど、日付文字列を ISO8601 形式で時刻は秒までみたいなフォーマットで書くのがめんどいので、以下の Node.js で動かす JS 書いた。</p>\n<div class=\"code-block-container\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> filename <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> d <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span>Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">9</span> <span class=\"token operator\">*</span> <span class=\"token number\">3600000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> jst_date <span class=\"token operator\">=</span> d<span class=\"token punctuation\">.</span><span class=\"token function\">toISOString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Z'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\.(\\d{3})</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'+09:00'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> out <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">---\ntitle: \"\"\ndate: \"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span> jst_date <span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\"\nexcerpt: \"\"\nslag: \"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span> filename <span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\"\n---\n\n# </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span> filename <span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\n\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> filepath <span class=\"token operator\">=</span> <span class=\"token string\">\"./_posts/\"</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>filename <span class=\"token operator\">?</span> filename <span class=\"token operator\">:</span> <span class=\"token string\">\"new-post\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\".md\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fs'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">writeFile</span><span class=\"token punctuation\">(</span>filepath<span class=\"token punctuation\">,</span> out<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">throw</span> err<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Created: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span> filepath <span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div><h3 id=\"javascript%E3%81%A7-jst-%E3%81%AE-iso8601%E3%83%95%E3%82%A9%E3%83%BC%E3%83%9E%E3%83%83%E3%83%88%E3%81%AB%E5%A4%89%E6%8F%9B%E3%81%99%E3%82%8B\"><a class=\"header-anchor-link\" href=\"#javascript%E3%81%A7-jst-%E3%81%AE-iso8601%E3%83%95%E3%82%A9%E3%83%BC%E3%83%9E%E3%83%83%E3%83%88%E3%81%AB%E5%A4%89%E6%8F%9B%E3%81%99%E3%82%8B\" aria-hidden=\"true\"></a> JavaScriptで JST の ISO8601フォーマットに変換する</h3>\n<p>日付を<code>Date.now()</code>で取得するとUTCの基準時間で取得できるので、9時間ずらして、ミリ秒の<code>.000</code>の部分を削除して出来上がり。</p>\n<p>1行でも書けるけど、複数行に分けたほうが可読性高いと思う。</p>\n<div class=\"code-block-container\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> jst_date <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span>Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">9</span> <span class=\"token operator\">*</span> <span class=\"token number\">3600000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toISOString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Z'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\.(\\d{3})</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'+09:00'</span><span class=\"token punctuation\">;</span>\n</code></pre></div><h3 id=\"js%E3%81%AE%E3%83%86%E3%83%B3%E3%83%97%E3%83%AC%E3%83%BC%E3%83%88%E3%83%AA%E3%83%86%E3%83%A9%E3%83%AB%E4%BE%BF%E5%88%A9\"><a class=\"header-anchor-link\" href=\"#js%E3%81%AE%E3%83%86%E3%83%B3%E3%83%97%E3%83%AC%E3%83%BC%E3%83%88%E3%83%AA%E3%83%86%E3%83%A9%E3%83%AB%E4%BE%BF%E5%88%A9\" aria-hidden=\"true\"></a> JSのテンプレートリテラル便利</h3>\n<p>まじ便利。</p>\n","excerpt":"新規投稿を作成するときの日付入力がめんどいので作った"}},"__N_SSG":true}